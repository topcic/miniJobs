// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace webAPI.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20230606081433_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.ApliciraniPosao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("aplikant_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum_apliciranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("posao_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("aplikant_id");

                    b.HasIndex("posao_id");

                    b.ToTable("ApliciraniPosao");
                });

            modelBuilder.Entity("WebAPI.Models.AplikantPosaoTip", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("aplikant_id")
                        .HasColumnType("int");

                    b.Property<int>("posaoTip_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("aplikant_id");

                    b.HasIndex("posaoTip_id");

                    b.ToTable("aplikantPosaoTip");
                });

            modelBuilder.Entity("WebAPI.Models.Drzava", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("WebAPI.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("brojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("datumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<string>("datumRodjenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("emailPotvrđen")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("korisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("refreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("refreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("spol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("KorisnickiNalog");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WebAPI.Models.Ocjena", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("apliciraniPosao_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum_kreiranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ocjenjen_id")
                        .HasColumnType("int");

                    b.Property<int?>("ocjenjenid")
                        .HasColumnType("int");

                    b.Property<int>("ocjenjuje_id")
                        .HasColumnType("int");

                    b.Property<int>("vrijednost")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("apliciraniPosao_id");

                    b.HasIndex("ocjenjenid");

                    b.HasIndex("ocjenjuje_id");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("WebAPI.Models.Opstina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("drzava_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("drzava_id");

                    b.ToTable("Opstina");
                });

            modelBuilder.Entity("WebAPI.Models.Pitanje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Pitanje");
                });

            modelBuilder.Entity("WebAPI.Models.PitanjeOdgovor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ponudjeniOdgovor_id")
                        .HasColumnType("int");

                    b.Property<int>("posaoPitanje_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ponudjeniOdgovor_id");

                    b.HasIndex("posaoPitanje_id");

                    b.ToTable("PitanjeOdgovor");
                });

            modelBuilder.Entity("WebAPI.Models.PitanjeThread", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("datum_kreiranja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("posao_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("posao_id");

                    b.ToTable("PitanjeThread");
                });

            modelBuilder.Entity("WebAPI.Models.PonudjeniOdgovor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("odgovor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pitanje_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pitanje_id");

                    b.ToTable("PonudjeniOdgovor");
                });

            modelBuilder.Entity("WebAPI.Models.Poruka", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("datum_kreiranja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("korisnickiNalog_id")
                        .HasColumnType("int");

                    b.Property<int>("pitanjeThread_id")
                        .HasColumnType("int");

                    b.Property<string>("sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("korisnickiNalog_id");

                    b.HasIndex("pitanjeThread_id");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("WebAPI.Models.Posao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Cijena")
                        .HasColumnType("int");

                    b.Property<string>("adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("brojAplikanata")
                        .HasColumnType("int");

                    b.Property<DateTime>("datum_kreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("opstina_id")
                        .HasColumnType("int");

                    b.Property<int>("posaoTip_id")
                        .HasColumnType("int");

                    b.Property<int>("poslodavac_id")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("opstina_id");

                    b.HasIndex("posaoTip_id");

                    b.HasIndex("poslodavac_id");

                    b.ToTable("Posao");
                });

            modelBuilder.Entity("WebAPI.Models.PosaoPitanje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("pitanje_id")
                        .HasColumnType("int");

                    b.Property<int>("posao_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pitanje_id");

                    b.HasIndex("posao_id");

                    b.ToTable("PosaoPitanje");
                });

            modelBuilder.Entity("WebAPI.Models.PosaoTip", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("PosaoTip");
                });

            modelBuilder.Entity("WebAPI.Models.Preporuka", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("opstina_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("opstina_id");

                    b.ToTable("Preporuka");
                });

            modelBuilder.Entity("WebAPI.Models.PreporukaTipPosla", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("posaoTip_id")
                        .HasColumnType("int");

                    b.Property<int>("preporuka_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("posaoTip_id");

                    b.HasIndex("preporuka_id");

                    b.ToTable("PreporukaTipPosla");
                });

            modelBuilder.Entity("WebAPI.Models.SpremljeniPosao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("aplikant_id")
                        .HasColumnType("int");

                    b.Property<int>("posao_id")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("aplikant_id");

                    b.HasIndex("posao_id");

                    b.ToTable("SpremljeniPosao");
                });

            modelBuilder.Entity("webAPI.Models.VerifikacijaEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("korisnik_id")
                        .HasColumnType("int");

                    b.Property<int>("verifikaciskiKod")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("korisnik_id");

                    b.ToTable("verifikacijaEmail");
                });

            modelBuilder.Entity("WebAPI.Models.Aplikant", b =>
                {
                    b.HasBaseType("WebAPI.Models.KorisnickiNalog");

                    b.Property<byte[]>("CV")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iskustvo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nivoObrazovanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("opstina_rodjenja_id")
                        .HasColumnType("int");

                    b.Property<int?>("preporuka_id")
                        .HasColumnType("int");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("prijedlogSatince")
                        .HasColumnType("int");

                    b.HasIndex("opstina_rodjenja_id");

                    b.HasIndex("preporuka_id");

                    b.ToTable("Aplikant");
                });

            modelBuilder.Entity("WebAPI.Models.Poslodavac", b =>
                {
                    b.HasBaseType("WebAPI.Models.KorisnickiNalog");

                    b.Property<string>("adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nazivFirme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("opstina_id")
                        .HasColumnType("int");

                    b.Property<string>("ponuda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("opstina_id");

                    b.ToTable("Poslodavac");
                });

            modelBuilder.Entity("WebAPI.Models.ApliciraniPosao", b =>
                {
                    b.HasOne("WebAPI.Models.Aplikant", "aplikant")
                        .WithMany("apliciraniPoslovi")
                        .HasForeignKey("aplikant_id")
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Posao", "posao")
                        .WithMany("apliciraniPoslovi")
                        .HasForeignKey("posao_id")
                        .IsRequired();

                    b.Navigation("aplikant");

                    b.Navigation("posao");
                });

            modelBuilder.Entity("WebAPI.Models.AplikantPosaoTip", b =>
                {
                    b.HasOne("WebAPI.Models.Aplikant", "aplikant")
                        .WithMany()
                        .HasForeignKey("aplikant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PosaoTip", "posaoTip")
                        .WithMany()
                        .HasForeignKey("posaoTip_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aplikant");

                    b.Navigation("posaoTip");
                });

            modelBuilder.Entity("WebAPI.Models.Ocjena", b =>
                {
                    b.HasOne("WebAPI.Models.ApliciraniPosao", "apliciraniPosao")
                        .WithMany("ocjene")
                        .HasForeignKey("apliciraniPosao_id")
                        .IsRequired();

                    b.HasOne("WebAPI.Models.KorisnickiNalog", "ocjenjen")
                        .WithMany()
                        .HasForeignKey("ocjenjenid");

                    b.HasOne("WebAPI.Models.KorisnickiNalog", "ocjenjuje")
                        .WithMany("ocjene")
                        .HasForeignKey("ocjenjuje_id")
                        .IsRequired();

                    b.Navigation("apliciraniPosao");

                    b.Navigation("ocjenjen");

                    b.Navigation("ocjenjuje");
                });

            modelBuilder.Entity("WebAPI.Models.Opstina", b =>
                {
                    b.HasOne("WebAPI.Models.Drzava", "drzava")
                        .WithMany()
                        .HasForeignKey("drzava_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("drzava");
                });

            modelBuilder.Entity("WebAPI.Models.PitanjeOdgovor", b =>
                {
                    b.HasOne("WebAPI.Models.PonudjeniOdgovor", "ponudjeniOdgovor")
                        .WithMany("pitanjeOdgovor")
                        .HasForeignKey("ponudjeniOdgovor_id")
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PosaoPitanje", "posaoPitanje")
                        .WithMany("pitanjeOdgovor")
                        .HasForeignKey("posaoPitanje_id")
                        .IsRequired();

                    b.Navigation("ponudjeniOdgovor");

                    b.Navigation("posaoPitanje");
                });

            modelBuilder.Entity("WebAPI.Models.PitanjeThread", b =>
                {
                    b.HasOne("WebAPI.Models.Posao", "posao")
                        .WithMany()
                        .HasForeignKey("posao_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("posao");
                });

            modelBuilder.Entity("WebAPI.Models.PonudjeniOdgovor", b =>
                {
                    b.HasOne("WebAPI.Models.Pitanje", "pitanje")
                        .WithMany()
                        .HasForeignKey("pitanje_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pitanje");
                });

            modelBuilder.Entity("WebAPI.Models.Poruka", b =>
                {
                    b.HasOne("WebAPI.Models.KorisnickiNalog", "korisnickiNalog")
                        .WithMany()
                        .HasForeignKey("korisnickiNalog_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PitanjeThread", "pitanjeThread")
                        .WithMany("poruke")
                        .HasForeignKey("pitanjeThread_id")
                        .IsRequired();

                    b.Navigation("korisnickiNalog");

                    b.Navigation("pitanjeThread");
                });

            modelBuilder.Entity("WebAPI.Models.Posao", b =>
                {
                    b.HasOne("WebAPI.Models.Opstina", "opstina")
                        .WithMany()
                        .HasForeignKey("opstina_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.PosaoTip", "posaoTip")
                        .WithMany()
                        .HasForeignKey("posaoTip_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Poslodavac", "poslodavac")
                        .WithMany()
                        .HasForeignKey("poslodavac_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("opstina");

                    b.Navigation("posaoTip");

                    b.Navigation("poslodavac");
                });

            modelBuilder.Entity("WebAPI.Models.PosaoPitanje", b =>
                {
                    b.HasOne("WebAPI.Models.Pitanje", "pitanje")
                        .WithMany()
                        .HasForeignKey("pitanje_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Posao", "posao")
                        .WithMany()
                        .HasForeignKey("posao_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pitanje");

                    b.Navigation("posao");
                });

            modelBuilder.Entity("WebAPI.Models.Preporuka", b =>
                {
                    b.HasOne("WebAPI.Models.Opstina", "opstina")
                        .WithMany()
                        .HasForeignKey("opstina_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("opstina");
                });

            modelBuilder.Entity("WebAPI.Models.PreporukaTipPosla", b =>
                {
                    b.HasOne("WebAPI.Models.PosaoTip", "posaoTip")
                        .WithMany()
                        .HasForeignKey("posaoTip_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Preporuka", "preporuka")
                        .WithMany()
                        .HasForeignKey("preporuka_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("posaoTip");

                    b.Navigation("preporuka");
                });

            modelBuilder.Entity("WebAPI.Models.SpremljeniPosao", b =>
                {
                    b.HasOne("WebAPI.Models.Aplikant", "aplikant")
                        .WithMany("spremljeniPosao")
                        .HasForeignKey("aplikant_id")
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Posao", "posao")
                        .WithMany("spremljeniPosao")
                        .HasForeignKey("posao_id")
                        .IsRequired();

                    b.Navigation("aplikant");

                    b.Navigation("posao");
                });

            modelBuilder.Entity("webAPI.Models.VerifikacijaEmail", b =>
                {
                    b.HasOne("WebAPI.Models.KorisnickiNalog", "korisnik")
                        .WithMany()
                        .HasForeignKey("korisnik_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("korisnik");
                });

            modelBuilder.Entity("WebAPI.Models.Aplikant", b =>
                {
                    b.HasOne("WebAPI.Models.KorisnickiNalog", null)
                        .WithOne()
                        .HasForeignKey("WebAPI.Models.Aplikant", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Opstina", "opstina_rodjenja")
                        .WithMany()
                        .HasForeignKey("opstina_rodjenja_id");

                    b.HasOne("WebAPI.Models.Preporuka", "preporuka")
                        .WithMany()
                        .HasForeignKey("preporuka_id");

                    b.Navigation("opstina_rodjenja");

                    b.Navigation("preporuka");
                });

            modelBuilder.Entity("WebAPI.Models.Poslodavac", b =>
                {
                    b.HasOne("WebAPI.Models.KorisnickiNalog", null)
                        .WithOne()
                        .HasForeignKey("WebAPI.Models.Poslodavac", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Opstina", "opstina")
                        .WithMany()
                        .HasForeignKey("opstina_id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("opstina");
                });

            modelBuilder.Entity("WebAPI.Models.ApliciraniPosao", b =>
                {
                    b.Navigation("ocjene");
                });

            modelBuilder.Entity("WebAPI.Models.KorisnickiNalog", b =>
                {
                    b.Navigation("ocjene");
                });

            modelBuilder.Entity("WebAPI.Models.PitanjeThread", b =>
                {
                    b.Navigation("poruke");
                });

            modelBuilder.Entity("WebAPI.Models.PonudjeniOdgovor", b =>
                {
                    b.Navigation("pitanjeOdgovor");
                });

            modelBuilder.Entity("WebAPI.Models.Posao", b =>
                {
                    b.Navigation("apliciraniPoslovi");

                    b.Navigation("spremljeniPosao");
                });

            modelBuilder.Entity("WebAPI.Models.PosaoPitanje", b =>
                {
                    b.Navigation("pitanjeOdgovor");
                });

            modelBuilder.Entity("WebAPI.Models.Aplikant", b =>
                {
                    b.Navigation("apliciraniPoslovi");

                    b.Navigation("spremljeniPosao");
                });
#pragma warning restore 612, 618
        }
    }
}
